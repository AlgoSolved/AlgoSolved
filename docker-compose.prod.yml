version: "3.9"

services:
  db:
    container_name: postgresql
    image: postgres:15-alpine
    volumes:
      - ${HOME}/algosolved/data/postgresql:/var/lib/postgresql
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_INITDB_ARGS: --encoding=UTF-8
      TZ: Asia/Seoul
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s
      timeout: 120s
      retries: 5
    networks:
      - algosolved-network

  backend:
    build: #추후에 image 로 변경할 것
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: backend
    environment:
      - STAGE=production
      - TZ=Asia/Seoul
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8080:8080
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health/ping"]
      interval: 5s
      timeout: 120s
      retries: 5
    volumes:
      - ./backend:/home/deploy/app/backend
    networks:
      - algosolved-network

networks:
  algosolved-network:
    driver: bridge
